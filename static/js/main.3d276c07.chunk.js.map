{"version":3,"sources":["styles/Leaderboard.module.css","styles/Questions.module.css","styles/PlayerCheck.module.css","components/Question.js","contexts/QuestionsContext.js","components/Leaderboard.js","components/PlayerCheck.js","components/Questions.js","App.js","index.js"],"names":["module","exports","Question","question","options","option","isCorrect","QuestionsContext","createContext","QuestionsProvider","children","useState","LoopQuestions","setLoopQuestions","showScore","setShowScore","playerName","setPlayerName","players","setPlayers","score","setScore","newGame","setNewGame","Provider","value","updateLoopQuestion","answer","length","resetValues","Leaderboard","useContext","useEffect","Axios","get","then","result","data","rankings","map","player","className","styles","name","container","title","src","alt","playerBoard","playerScore","to","onClick","Player","scoreSection","htmlFor","type","onChange","e","target","placeholder","id","playerButtons","Questions","saveWarning","setSaveWarning","scoreResult","saveAlert","post","saveScore","saveBtn","questions","href","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d276c07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Leaderboard_container__1ePXb\",\"title\":\"Leaderboard_title__Z1K8A\",\"rankings\":\"Leaderboard_rankings__137Gg\",\"player\":\"Leaderboard_player__2Yx-q\",\"playerBoard\":\"Leaderboard_playerBoard__2RMi9\",\"playerScore\":\"Leaderboard_playerScore__324vD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreSection\":\"Questions_scoreSection__3RwC8\",\"scoreResult\":\"Questions_scoreResult__Zh7Z9\",\"questions\":\"Questions_questions__jj_5f\",\"options\":\"Questions_options__awT6N\",\"saveBtn\":\"Questions_saveBtn__3Lv0v\",\"saveAlert\":\"Questions_saveAlert__awhZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreSection\":\"PlayerCheck_scoreSection__2R6mP\",\"playerButtons\":\"PlayerCheck_playerButtons__2lgtB\"};","import React from 'react';\r\n\r\nconst Question = [\r\n    {\r\n        question: 'if I were you, would you be me or you I be you?',\r\n        options: [\r\n            {option: 'wtf?', isCorrect: true},\r\n            {option: 'I would be me, but also you.', isCorrect: false},\r\n            {option: 'I... y-yes.', isCorrect: false},\r\n            {option: 'thirteen', isCorrect: false}\r\n        ]\r\n    },\r\n    {\r\n        question: 'What is the sum of 3 + 4 * 2 / 1?', \r\n        options: [\r\n            {option: '18', isCorrect: false},\r\n            {option: '11', isCorrect: true},\r\n            {option: '14', isCorrect: false},\r\n            {option: '7', isCorrect: false}\r\n        ]\r\n    },\r\n    {\r\n        question: 'What is the color of SUN?', \r\n        options: [\r\n            {option: 'red', isCorrect: false},\r\n            {option: 'orange', isCorrect: false},\r\n            {option: 'reddish orange', isCorrect: false},\r\n            {option: 'yellow', isCorrect: true}\r\n        ]\r\n    },\r\n    {\r\n        question: 'Considering that the sky is blue and the earth is a square, what is my name?', \r\n        options: [\r\n            {option: 'Juliana', isCorrect: false},\r\n            {option: 'Shrek', isCorrect: false},\r\n            {option: 'Oliver', isCorrect: false},\r\n            {option: '>> GABRIEL JODAS <<', isCorrect: true}\r\n        ]\r\n    }\r\n]\r\n\r\nexport default Question;","import { createContext, useState } from \"react\";\r\nimport Question from '../components/Question';\r\n\r\nexport const QuestionsContext = createContext({});\r\n\r\nexport function QuestionsProvider({children}){\r\n    const [LoopQuestions, setLoopQuestions] = useState(0);\r\n\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\n    const [playerName, setPlayerName] = useState('');\r\n\r\n    const [players, setPlayers] = useState([]);\r\n  \r\n    const [score, setScore] = useState(0);\r\n  \r\n    const [newGame, setNewGame] = useState(false);\r\n  \r\n  \r\n    const updateLoopQuestion = (answer) => {\r\n        if(answer === true){\r\n            setScore(score + 1);\r\n        } \r\n  \r\n        if(LoopQuestions < Question.length - 1) {\r\n            let updatedQuestion = LoopQuestions + 1;\r\n            setLoopQuestions(updatedQuestion);\r\n        } else {\r\n            setShowScore(true);\r\n        }\r\n    }\r\n\r\n    function resetValues() {\r\n        setScore(0);\r\n        setLoopQuestions(0);\r\n        setNewGame(false);\r\n        setPlayerName('');\r\n        setShowScore(false);\r\n    }\r\n\r\n    return(\r\n        <QuestionsContext.Provider value={{\r\n                LoopQuestions,\r\n                setLoopQuestions,\r\n                showScore,\r\n                setShowScore,\r\n                score,\r\n                setScore,\r\n                updateLoopQuestion,\r\n                newGame,\r\n                setNewGame,\r\n                playerName,\r\n                setPlayerName,\r\n                players,\r\n                setPlayers,\r\n                resetValues\r\n        }}>\r\n            {children}\r\n        </QuestionsContext.Provider>\r\n    )\r\n}","import Axios from 'axios';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { QuestionsContext } from '../contexts/QuestionsContext';\r\nimport styles from '../styles/Leaderboard.module.css';\r\n\r\n\r\nconst Leaderboard = () => {\r\n    const { players, resetValues, setPlayers } = useContext(QuestionsContext);\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://quizz-app-heroku.herokuapp.com/quizz/get')\r\n        .then(result => {\r\n          setPlayers(result.data)\r\n        })\r\n    }, [])\r\n\r\n    const rankings = players.map(player => (\r\n        <div key={player.score} className={styles.player}>\r\n            <p>{player.name}</p>\r\n            <span>{player.score}</span>\r\n        </div>\r\n    ))\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <h1 className={styles.title}>\r\n            Leaderboard\r\n            <img src=\"./crown-solid.svg\" alt=\"crown symbol\" />\r\n            </h1>\r\n\r\n            <div className={styles.rankings}>\r\n\r\n                <div className={styles.player}>\r\n                    <p className={styles.playerBoard}>Player</p>\r\n                    <span className={styles.playerScore}>Score</span>\r\n                </div>\r\n\r\n                {rankings}\r\n            </div>\r\n\r\n            <Link to=\"/Quizz-ReactJS/\">\r\n            <button onClick={() => resetValues()} className=\"play-again\"> Play again </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard;","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { QuestionsContext } from '../contexts/QuestionsContext';\r\nimport styles from '../styles/PlayerCheck.module.css';\r\n\r\n\r\nconst Player = () => {\r\n    const {\r\n        newGame,\r\n        playerName,\r\n        setPlayerName,\r\n    } = useContext(QuestionsContext);\r\n\r\n    return (\r\n            <>\r\n            {newGame ||\r\n                <div className={styles.scoreSection}>\r\n                    <h1>Quizz</h1>\r\n\r\n                    <label htmlFor=\"name\">Type a name to save you'r score</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={playerName} \r\n                        onChange={e => setPlayerName(e.target.value)}  \r\n                        placeholder=\"name/nickname\" \r\n                        id=\"name\"   \r\n                    />\r\n                    <div className={styles.playerButtons}>\r\n                        <Link to=\"/Quizz-ReactJS/Leaderboard\">\r\n                            <button className=\"board-btn\">\r\n                            Leaderboard\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Link to=\"/Quizz-ReactJS/QuizzGame\">\r\n                            <button className=\"play-again\">Start</button>\r\n                        </Link>\r\n                    </div>\r\n                </div> \r\n            }\r\n\r\n            </>\r\n    ) \r\n}\r\n\r\nexport default Player","import Axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { QuestionsContext } from '../contexts/QuestionsContext';\r\n\r\nimport Question from './Question';\r\nimport styles from '../styles/Questions.module.css';\r\n\r\nconst Questions = () => {\r\n        const {\r\n            LoopQuestions, \r\n            showScore, \r\n            score, \r\n            updateLoopQuestion,\r\n            playerName,\r\n            resetValues\r\n        } = useContext(QuestionsContext);\r\n\r\n        const [saveWarning, setSaveWarning] = useState('');\r\n\r\n        function saveScore(name,score){\r\n            if(name !== ''){\r\n                Axios.post('https://quizz-app-heroku.herokuapp.com/quizz/insert', {\r\n                    name: name,\r\n                    score: score\r\n                })\r\n                setSaveWarning(\"You'r score has been saved, check the leaderboard!\")\r\n            }\r\n            setSaveWarning(\"You need to pass a name in order to save you'r score.\")\r\n        }\r\n\r\nreturn (\r\n    <>\r\n    {showScore ? (\r\n        <div className={styles.scoreSection}>\r\n        <div className={styles.scoreResult}>\r\n            <h2> <span>{playerName}</span> scored {score} out of {Question.length} </h2>\r\n                <span className={styles.saveAlert}>{saveWarning}</span>\r\n        </div>\r\n                    <button onClick={() => saveScore(playerName, score)} className={styles.saveBtn}>\r\n                        Save Score\r\n                    </button>\r\n                <Link to=\"/Quizz-ReactJS/Leaderboard\">\r\n                    <button className=\"board-btn\">\r\n                        Leaderboard\r\n                    </button>\r\n                </Link>\r\n\r\n                <Link to=\"/Quizz-ReactJS/\">\r\n                    <button className=\"play-again\" onClick={() => resetValues()}>Play Again</button>\r\n                </Link>\r\n        </div>\r\n        ) : (\r\n            <div className={styles.questions}>\r\n            <h2>{Question[LoopQuestions].question}</h2>\r\n    \r\n                <div className={styles.options}>\r\n                    {Question[LoopQuestions].options.map(question => {\r\n                        return (\r\n                        <a href='#'\r\n                            onClick={() => updateLoopQuestion(question.isCorrect)}\r\n                            className=\"question-option\" \r\n                            key={question.option}\r\n\r\n                        >\r\n                            {question.option}\r\n                        </a>\r\n                        )}\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )}\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Questions;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Leaderboard from './components/Leaderboard';\nimport Player from './components/PlayerCheck';\nimport Questions from './components/Questions';\nimport { QuestionsProvider } from './contexts/QuestionsContext';\n\nfunction App() {\n\n  return (\n    <QuestionsProvider>\n      <Router>\n        <div className=\"App\">\n          <div className=\"quizz-container\">\n\n            <Route path=\"/Quizz-ReactJS/Leaderboard\" component={Leaderboard}/>\n            <Route exact path=\"/Quizz-ReactJS/\" component={Player}/>\n            <Route path=\"/Quizz-ReactJS/QuizzGame\" component={Questions} />\n\n          </div>\n        </div>\n      </Router>\n    </QuestionsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}